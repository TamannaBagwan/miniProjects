export const questions = [
  {
    prompt: "Which lifecycle method is used to fetch data when a React component mounts?",
    optionA: "componentWillUnmount",
    optionB: "componentDidMount",
    optionC: "componentDidUpdate",
    optionD: "render",
    answer: "B",
  },
  {
    prompt: "What does the 'useState' hook return in React?",
    optionA: "A function that updates the state",
    optionB: "An array with the current state and a function to update it",
    optionC: "A single object representing the state",
    optionD: "A method to fetch data",
    answer: "B",
  },
  {
    prompt: "Which of the following is NOT a valid way to create a function in JavaScript?",
    optionA: "function myFunction() {}",
    optionB: "const myFunction = function() {}",
    optionC: "const myFunction = () => {}",
    optionD: "const myFunction = new Function[]",
    answer: "D",
  },
  {
    prompt: "What will 'console.log(typeof null)' return in JavaScript?",
    optionA: "'null'",
    optionB: "'undefined'",
    optionC: "'object'",
    optionD: "'string'",
    answer: "C",
  },
  {
    prompt: "What is the correct way to update state based on the previous state in React?",
    optionA: "setState(count + 1)",
    optionB: "setState(prevState => prevState + 1)",
    optionC: "setState({ count: count + 1 })",
    optionD: "setState(count => count + 1)",
    answer: "B",
  },
  {
    prompt: "Which method is used to convert a JSON string into a JavaScript object?",
    optionA: "JSON.stringify()",
    optionB: "JSON.parse()",
    optionC: "JSON.toObject()",
    optionD: "JSON.convert()",
    answer: "B",
  },
  {
    prompt: "What will be logged by 'console.log(2 + '2' - 1)' in JavaScript?",
    optionA: "22",
    optionB: "3",
    optionC: "21",
    optionD: "NaN",
    answer: "C",
  },
  {
    prompt: "Which JavaScript function is used to delay execution of a function?",
    optionA: "setTimeout()",
    optionB: "setInterval()",
    optionC: "delay()",
    optionD: "wait()",
    answer: "A",
  },
  {
    prompt: "What is the default value of 'this' inside a regular function in strict mode?",
    optionA: "window",
    optionB: "undefined",
    optionC: "null",
    optionD: "global",
    answer: "B",
  },
  {
    prompt: "How do you handle side effects in a functional React component?",
    optionA: "Using componentDidMount",
    optionB: "Using useEffect",
    optionC: "Using useState",
    optionD: "Using componentWillUpdate",
    answer: "B",
  },
];
